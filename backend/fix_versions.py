#!/usr/bin/env python3
# ====================================
# –§–ê–ô–õ: backend/fix_versions.py
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤–µ—Ä—Å–∏–π
# ====================================

"""
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤–µ—Ä—Å–∏–π –ø–∞–∫–µ—Ç–æ–≤
"""

import subprocess
import sys

def run_pip_command(command):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç pip –∫–æ–º–∞–Ω–¥—É"""
    try:
        print(f"üîß –í—ã–ø–æ–ª–Ω—è–µ–º: {command}")
        result = subprocess.run(command.split(), capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result.stderr}")
            return False
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def main():
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π –ø–∞–∫–µ—Ç–æ–≤...")
    print("=" * 50)
    
    # –°–ø–∏—Å–æ–∫ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã—Ö –≤–µ—Ä—Å–∏–π
    compatible_packages = [
        "fastapi==0.100.1",
        "uvicorn==0.22.0", 
        "pydantic==1.10.12",
        "starlette==0.27.0",
        "typing-extensions==4.7.1"
    ]
    
    print("üì¶ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–º–∏ –≤–µ—Ä—Å–∏—è–º–∏...")
    
    for package in compatible_packages:
        print(f"\nüîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º {package}")
        run_pip_command(f"pip install {package} --force-reinstall --no-deps")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
    print("\nüß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã...")
    
    try:
        import fastapi
        print(f"‚úÖ FastAPI {fastapi.__version__}")
    except Exception as e:
        print(f"‚ùå FastAPI: {e}")
    
    try:
        import uvicorn
        print(f"‚úÖ Uvicorn {uvicorn.__version__}")
    except Exception as e:
        print(f"‚ùå Uvicorn: {e}")
        
    try:
        import pydantic
        print(f"‚úÖ Pydantic {pydantic.VERSION}")
    except Exception as e:
        print(f"‚ùå Pydantic: {e}")
    
    print("\nüöÄ –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")
    
    try:
        from fastapi import FastAPI
        app = FastAPI()
        
        @app.get("/")
        def read_root():
            return {"message": "FastAPI —Ä–∞–±–æ—Ç–∞–µ—Ç!"}
        
        print("‚úÖ –ü—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        
        # –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á–∏–π test —Ñ–∞–π–ª
        create_working_test()
        
        print("\nüéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ: python test_server.py")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        print("\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
        print("pip install fastapi==0.95.2 uvicorn==0.20.0 pydantic==1.10.7")

def create_working_test():
    """–°–æ–∑–¥–∞–µ—Ç —Ä–∞–±–æ—á–∏–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä"""
    test_code = '''#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ FastAPI
"""

try:
    from fastapi import FastAPI
    from fastapi.responses import JSONResponse
    import uvicorn
    import time
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = FastAPI(
        title="Legal Assistant API - Test",
        description="–¢–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è API",
        version="1.0.0"
    )
    
    @app.get("/")
    async def root():
        """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"""
        return {
            "message": "üéâ Legal Assistant API —Ä–∞–±–æ—Ç–∞–µ—Ç!",
            "status": "ok",
            "version": "test-1.0.0",
            "timestamp": time.time()
        }
    
    @app.get("/health")
    async def health():
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è"""
        return {
            "status": "healthy",
            "mode": "test",
            "dependencies": {
                "fastapi": "installed",
                "uvicorn": "installed", 
                "pydantic": "installed"
            }
        }
    
    @app.get("/api/test")
    async def api_test():
        """–¢–µ—Å—Ç–æ–≤—ã–π API endpoint"""
        return {
            "message": "API endpoints —Ä–∞–±–æ—Ç–∞—é—Ç",
            "features": [
                "‚úÖ FastAPI –∑–∞–ø—É—â–µ–Ω",
                "‚úÖ Pydantic —Ä–∞–±–æ—Ç–∞–µ—Ç", 
                "‚úÖ JSON responses —Ä–∞–±–æ—Ç–∞—é—Ç",
                "üîß –ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≥–æ—Ç–æ–≤–∞"
            ]
        }
    
    if __name__ == "__main__":
        print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...")
        print("üìç –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:8000")
        print("üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs")
        print("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞: Ctrl+C")
        print("-" * 50)
        
        uvicorn.run(
            app,
            host="0.0.0.0",
            port=8000,
            log_level="info"
        )

except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install fastapi uvicorn")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
'''
    
    try:
        with open("test_server.py", "w", encoding="utf-8") as f:
            f.write(test_code)
        print("üìù –°–æ–∑–¥–∞–Ω test_server.py")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å test_server.py: {e}")

if __name__ == "__main__":
    main()